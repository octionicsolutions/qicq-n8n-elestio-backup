{
  "createdAt": "2025-09-17T11:48:38.596Z",
  "updatedAt": "2025-10-24T13:49:33.680Z",
  "id": "MOCbD1Vyim0GGKgU",
  "name": "Sync orders from CS to ZD deals",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -704,
        416
      ],
      "id": "5a8db430-49e4-45dc-82c5-10810e713266",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "sales_order_id",
        "options": {}
      },
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 2,
      "position": [
        2672,
        416
      ],
      "id": "3ee65590-7b19-4807-a11b-126bffcd076e",
      "name": "Remove Duplicates"
    },
    {
      "parameters": {
        "content": "In case an order contains multiple bikes",
        "height": 208,
        "width": 224,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2608,
        352
      ],
      "typeVersion": 1,
      "id": "e41783f0-f931-4331-8d7f-98d33c9bb2b4",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "url": "https://api.cyclesoftware.nl/api/v1/salesdata/orders.json",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "offset",
              "value": "={{ $json.offset }}"
            },
            {
              "name": "modified_start",
              "value": "={{ $('Get last updated timestamp').item.json.cs_orders_last_update.toDateTime().format('yyyy-MM-dd') || $now.minus(30, 'days').format('yyyy-MM-dd') }}"
            },
            {
              "name": "modified_end",
              "value": "={{ $now.format('yyyy-MM-dd') }}"
            },
            {
              "name": "include_deleted",
              "value": "1"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-encoding",
              "value": "gzip"
            },
            {
              "name": "Content-type",
              "value": "application/json; charset=utf-8"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        432,
        416
      ],
      "id": "7bf1d0be-6465-469c-be28-53ae5e5345e7",
      "name": "Cyclesoftware: Get recently updated orders",
      "retryOnFail": true,
      "alwaysOutputData": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpBasicAuth": {
          "id": "q6AhamIl37oB4xIX",
          "name": "Cyclesoftware (PROD)"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.getbase.com/v2/contacts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "custom_fields[Cyclesoftware ID]",
              "value": "={{ $('CS Order Ref').item.json.customer_id }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "User-Agent",
              "value": "YourAppName/1.0"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3936,
        688
      ],
      "id": "83148b76-c1b6-4cb3-9b14-53046e16133f",
      "name": "Zendesk: Get contacts",
      "alwaysOutputData": true,
      "credentials": {
        "httpBearerAuth": {
          "id": "LsYF5cN5nkb0vjbk",
          "name": "Zendesk Sell (PROD)"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ffad9e85-2c09-4c23-977c-3c17e772dd54",
              "leftValue": "={{ $json.body.items[0].data }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4160,
        688
      ],
      "id": "9687f0e1-52a4-4c89-9847-53f3b312de60",
      "name": "If contact does not exist"
    },
    {
      "parameters": {
        "errorMessage": "=Contact wit ID {{ $('CS Order Ref').item.json.customer_id }} could not be found in ZD"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        4384,
        592
      ],
      "id": "74330781-23b0-4f59-a0ba-f72651efc0e8",
      "name": "Contact not found in ZD"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"data\": {\n    \"name\": \"{{ $('CS Order Ref').item.json.description }}\",\n    \"contact_id\": {{ $('Zendesk: Get contacts').item.json.body.items[0].data.id }},\n    \"currency\": \"EUR\",\n    \"value\": \"{{ ($('CS Order Ref').item.json.gross_unit_price_in_vat_in_cents / 100).toFixed(2) }}\",\n    \"stage_id\": {{ $('Set Stage ID').item.json.stage_id }},\n    \"custom_fields\": {\n      \"Cyclesoftware ID\": {{ $('CS Order Ref').item.json.sales_order_id }},\n      \"Created by\": \"CS-Sync\"\n    }\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5648,
        784
      ],
      "id": "1c911bfd-3773-46c7-ad4c-878a16b25b5b",
      "name": "Prepare fields"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.getbase.com/v2/deals",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "User-Agent",
              "value": "YourAppName/1.0"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('Prepare fields').item.json.toJsonString() }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5856,
        784
      ],
      "id": "97c5221f-1fa2-4c14-b4ab-bf4fd9df9f0a",
      "name": "Zendesk: Create deal",
      "retryOnFail": false,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpBearerAuth": {
          "id": "LsYF5cN5nkb0vjbk",
          "name": "Zendesk Sell (PROD)"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.getbase.com/v2/stages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "User-Agent",
              "value": "YourAppName/1.0"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -240,
        672
      ],
      "id": "f09f771c-74a5-434e-87bb-78f4c1f82878",
      "name": "Zendesk: Get stages",
      "retryOnFail": false,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpBearerAuth": {
          "id": "LsYF5cN5nkb0vjbk",
          "name": "Zendesk Sell (PROD)"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.getbase.com/v2/deals",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "contact_id",
              "value": "={{ $json.body.items[0].data.id }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "User-Agent",
              "value": "YourAppName/1.0"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4384,
        784
      ],
      "id": "a67da06f-9d97-414e-a3fd-9f0036360575",
      "name": "Zendesk: Get deals",
      "alwaysOutputData": true,
      "credentials": {
        "httpBearerAuth": {
          "id": "LsYF5cN5nkb0vjbk",
          "name": "Zendesk Sell (PROD)"
        }
      }
    },
    {
      "parameters": {
        "content": "## Question\nAlways search deal by contact and deal with multiple orders OR store CS order ID in ZD and risk duplicates due to already existing deals? Since that otherwise would require an initial matching.\n## Suggestion\nAlways search for deal, HITL if decision unclear. Store CS ID as final mapping",
        "height": 304,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4032,
        1056
      ],
      "typeVersion": 1,
      "id": "b0b7c29d-4f13-4dac-9752-040b89b78009",
      "name": "Sticky Note1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5024,
        1088
      ],
      "id": "fbe888f6-1180-46cd-8d58-847377a1da75",
      "name": "Do nothing"
    },
    {
      "parameters": {
        "url": "https://api.getbase.com/v2/deals",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "custom_fields[Cyclesoftware ID]",
              "value": "={{ $('Remove Duplicates').item.json.sales_order_id }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "User-Agent",
              "value": "YourAppName/1.0"
            }
          ]
        },
        "options": {
          "batching": {
            "batch": {
              "batchSize": 5,
              "batchInterval": 2000
            }
          },
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3520,
        528
      ],
      "id": "2d88160b-e002-4c14-8192-8d8e1b06853d",
      "name": "Zendesk: Get deal by CS ID",
      "alwaysOutputData": true,
      "credentials": {
        "httpBearerAuth": {
          "id": "LsYF5cN5nkb0vjbk",
          "name": "Zendesk Sell (PROD)"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "58b22a5b-e124-49c9-b00e-3b0b1fbe4501",
              "leftValue": "={{ $json.body.items }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3728,
        528
      ],
      "id": "504c0575-b246-4139-b1b8-29b39528665a",
      "name": "Deal found?"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3936,
        384
      ],
      "id": "85cc6ad5-e63c-40e5-8644-c1a04cb4e4d8",
      "name": "Update deal1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "body.items",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        5024,
        896
      ],
      "id": "c28e84ad-2655-49bc-8d68-0acd16d83c63",
      "name": "Split Out",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "items",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        5856,
        1008
      ],
      "id": "4f1d04b4-2697-436a-b583-9cfb45fdb8e2",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        4832,
        784
      ],
      "id": "9233034e-9620-45e5-b72c-c827057fb648",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5232,
        1088
      ],
      "id": "4924f633-3669-400f-b8cb-9b0bf7bc087d",
      "name": "Wait",
      "webhookId": "782fa07b-163d-407e-b66a-1c5e9ff78dea"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"data\": {\n    \"contact_id\": {{ $('Zendesk: Get contacts').item.json.body.items[0].data.id }},\n    \"currency\": \"EUR\",\n    \"value\": {{ $if($('CS Order Ref').item.json.gross_unit_price_in_vat_in_cents > 0, ($('CS Order Ref').item.json.gross_unit_price_in_vat_in_cents / 100).toFixed(2), 0) }},\n    \"stage_id\": {{ $('Set Stage ID').item.json.stage_id }},\n    \"custom_fields\": {\n      \"Cyclesoftware ID\": {{ $('CS Order Ref').item.json.sales_order_id }}\n    }\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6064,
        1008
      ],
      "id": "0eb66033-2c9d-42fc-a2cf-587011c89c9e",
      "name": "Prepare fields1"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://api.getbase.com/v2/deals/{{ $('ZD Deal Ref').item.json.body.items[0].data.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "User-Agent",
              "value": "YourAppName/1.0"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('Prepare fields1').item.json.toJsonString() }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6288,
        1008
      ],
      "id": "6a996e08-c20f-4092-8af2-cc619e9d2f77",
      "name": "Zendesk: Update deal",
      "retryOnFail": false,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpBearerAuth": {
          "id": "LsYF5cN5nkb0vjbk",
          "name": "Zendesk Sell (PROD)"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "40b475ce-acf3-40c0-a019-23b313d221f5",
              "name": "current_datetime",
              "value": "={{ $now.toISO() }}",
              "type": "string"
            },
            {
              "id": "62297b65-4a62-4040-867c-3679e18e67b9",
              "name": "stage_id_information",
              "value": 119627,
              "type": "number"
            },
            {
              "id": "92094e3b-ef60-435b-ac68-15f74dc3bc66",
              "name": "stage_id_offer",
              "value": 119634,
              "type": "number"
            },
            {
              "id": "b5de3488-ee5d-4fa1-ae3a-f1bce8d1fb03",
              "name": "stage_id_won",
              "value": 119628,
              "type": "number"
            },
            {
              "id": "7a38b4d4-d306-4ec1-ad2b-95863175ed49",
              "name": "stage_id_lost",
              "value": 119630,
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -240,
        416
      ],
      "id": "44c4a8c6-43de-4290-a3db-ea0501833f4a",
      "name": "Globals"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "95295a79-b3ec-4de9-a4e3-672337c7954b",
              "name": "stage_id",
              "value": "={{ $('CS Order Ref').item.json.order_type_id == 5 ? $('Globals').item.json.stage_id_offer : $('Globals').item.json.stage_id_won }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3312,
        528
      ],
      "id": "7101ede8-19f6-47a9-8469-28bf3b896d6b",
      "name": "Set Stage ID"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e70c47e6-488c-42df-b0b5-2f7e67cfe527",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5440,
        896
      ],
      "id": "49a0b073-a8a3-4ba3-9d92-b2e390985ef9",
      "name": "No deal found"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"data\": {\n    \"value\": {{ $if($('Calc total value').item.json.total_value > 0, ($('Calc total value').item.json.total_value / 100).toFixed(2), 0) }},\n    \"stage_id\": {{ $('Set Stage ID').item.json.stage_id }}\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4160,
        384
      ],
      "id": "1413187e-4dc2-4a92-b39d-036911f20788",
      "name": "Prepare fields2"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://api.getbase.com/v2/deals/{{ $('Zendesk: Get deal by CS ID').item.json.body.items[0].data.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "User-Agent",
              "value": "YourAppName/1.0"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('Prepare fields2').item.json.toJsonString() }}",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4384,
        384
      ],
      "id": "48c555cb-fa58-441d-a1f1-1b267dabf9ab",
      "name": "Zendesk: Update deal1",
      "retryOnFail": false,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpBearerAuth": {
          "id": "LsYF5cN5nkb0vjbk",
          "name": "Zendesk Sell (PROD)"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "cs_orders_last_update",
        "key": "cs_orders_last_update",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -16,
        416
      ],
      "id": "54ef5701-3791-40b8-9835-55869afdc92b",
      "name": "Get last updated timestamp",
      "credentials": {
        "redis": {
          "id": "KM9u3JmYZGaWL2Xe",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "cs_orders_last_update",
        "value": "={{ $('Globals').first().json.current_datetime }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1552,
        224
      ],
      "id": "af576da0-e767-46d0-ba37-c07c2d11a993",
      "name": "Update last updated timestamp",
      "credentials": {
        "redis": {
          "id": "KM9u3JmYZGaWL2Xe",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "515898e0-64c1-4e6e-b3bb-6694ed7a5f53",
              "name": "offset",
              "value": "={{ $json.offset || 0 }}",
              "type": "number"
            },
            {
              "id": "e7684eee-325e-450d-a446-f1b7177eae0f",
              "name": "data",
              "value": "={{ $json.data || [] }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        208,
        416
      ],
      "id": "b7969818-03c4-463c-b296-e93647dce87f",
      "name": "next"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cc68b441-db36-4479-ac64-78e06a2189c7",
              "name": "offset",
              "value": "={{ $('next').first().json.offset + 500 }}",
              "type": "number"
            },
            {
              "id": "03d6d21d-0fd3-43fb-b494-ecb11b2a4e23",
              "name": "data",
              "value": "={{ \n  $if(\n    $('next').item.json.data?.length,\n    $('next').item.json.data.append(...$json.data),\n    $json.data\n  ) \n}}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        880,
        416
      ],
      "id": "50cd3f23-b6b0-40c3-98ed-d47fa4fe8f0a",
      "name": "merge"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "26234167-6271-45eb-b676-d6704d65a209",
              "leftValue": "={{ $('Cyclesoftware: Get recently updated orders').first().json }}",
              "rightValue": 404,
              "operator": {
                "type": "object",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1104,
        416
      ],
      "id": "c1be74b2-aabe-4ffc-a520-93471de9314d",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "65e0302f-4698-4009-abff-5e6fa543d620",
              "name": "data",
              "value": "={{ $('merge').item.json.data }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1328,
        320
      ],
      "id": "2a386406-4f18-4ca5-8c5b-89221082f9a2",
      "name": "Result"
    },
    {
      "parameters": {
        "content": "Paginate until all items were retrieved which have been modified before the last stored timestamp",
        "height": 280,
        "width": 896,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        368,
        352
      ],
      "typeVersion": 1,
      "id": "8b65b58d-7302-4103-9323-b93671e19edc",
      "name": "Sticky Note5"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2224,
        416
      ],
      "id": "b020f6b8-010e-431c-a9dd-acf58a6605c2",
      "name": "CS Order Ref"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4608,
        784
      ],
      "id": "c8b1e8cb-9e3c-4fe1-91a6-51cf498db489",
      "name": "ZD Deal Ref"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "zd_deals_items_to_skip",
        "messageData": "={{ $json.data.id.toString() }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        6544,
        784
      ],
      "id": "271e857d-b312-4e4d-8160-1dcb6b2b1d89",
      "name": "Store ZD ID's to skip them during CS update",
      "credentials": {
        "redis": {
          "id": "KM9u3JmYZGaWL2Xe",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        6288,
        784
      ],
      "id": "e094085a-85b8-4acb-8c70-03aee8ad38f9",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        6288,
        592
      ],
      "id": "afc7e5eb-1348-459d-9b90-9e029192643b",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cb1a2dc4-cd94-45a8-9f09-f1000bbb8d7c",
              "leftValue": "={{ $json.datetime_modified }}",
              "rightValue": "={{ $('Get last updated timestamp').first().json.cs_orders_last_update }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        2000,
        416
      ],
      "id": "6c82bef5-4883-43fb-b54f-055ef55b4c7c",
      "name": "Keep only new entries"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "284f7548-7c3d-443c-b301-70330cd288e9",
              "leftValue": "={{ $json.data[0] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1552,
        416
      ],
      "id": "9d800d09-c176-4d15-b149-9b7f25b70d3a",
      "name": "Only continue if data returned"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1776,
        416
      ],
      "id": "b0d44efe-1ef3-4903-8506-3c83b09f6a5d",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "eb50306e-33d4-44da-9cee-fbfe2468e9c7",
              "leftValue": "={{ $json.pos_group_id }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        2448,
        416
      ],
      "id": "2195556e-10d3-4970-bf65-5e2039fc27b0",
      "name": "Only keep orders with a bike"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "48152aed-c8c3-4a44-be0e-9b40e8e43979",
              "name": "total_value",
              "value": "={{ \n  $('CS Order Ref')\n    .all()\n    .filter(i => i.json.sales_order_id === $json.sales_order_id)\n    .reduce((sum, i) => sum + i.json.gross_unit_price_in_vat_in_cents, 0) \n}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3104,
        528
      ],
      "id": "dc7d37b7-55c9-485a-b1b1-0a50e49e61e3",
      "name": "Calc total value"
    },
    {
      "parameters": {
        "content": "## Set stage ID's\n\nExecute the node below and search within the result for the ID's of the stages listed in the set node",
        "height": 592,
        "width": 224
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -304,
        240
      ],
      "typeVersion": 1,
      "id": "a4958d59-1ca7-4d34-a486-9f2dec42b2ba",
      "name": "Sticky Note6"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -480,
        416
      ],
      "id": "738c6f6f-451f-49b8-af36-71e602a0ff08",
      "name": "Limit"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        656,
        416
      ],
      "id": "78717d33-37ba-49cc-899a-07bedc1cfe29",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "eb50306e-33d4-44da-9cee-fbfe2468e9c7",
              "leftValue": "={{ $json.status_id }}",
              "rightValue": 5,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2896,
        416
      ],
      "id": "57062719-3c3a-4f52-a416-3403091b9a73",
      "name": "If order is cancelled"
    },
    {
      "parameters": {
        "url": "https://api.getbase.com/v2/deals",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "custom_fields[Cyclesoftware ID]",
              "value": "={{ $('CS Order Ref').item.json.sales_order_id }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "User-Agent",
              "value": "YourAppName/1.0"
            }
          ]
        },
        "options": {
          "batching": {
            "batch": {
              "batchSize": 5,
              "batchInterval": 2000
            }
          },
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3104,
        144
      ],
      "id": "f37cc1a9-99c7-4b7a-83a9-b53a1b580e44",
      "name": "Zendesk: Get deal by CS ID1",
      "alwaysOutputData": true,
      "credentials": {
        "httpBearerAuth": {
          "id": "LsYF5cN5nkb0vjbk",
          "name": "Zendesk Sell (PROD)"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3fec5379-e4a4-46b1-9a3d-7ba0ec48aaf8",
              "leftValue": "={{ $json.body.items }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        3312,
        144
      ],
      "id": "8582df50-463b-43e9-9759-7db02e47d71b",
      "name": "Deal found?1"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "SNaq9bZVQ31qO1MX",
          "mode": "list",
          "cachedResultUrl": "/workflow/SNaq9bZVQ31qO1MX",
          "cachedResultName": "Notify about ready orders"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        2896,
        768
      ],
      "id": "15937c24-b239-4a56-a53d-89780a148ebc",
      "name": "Call 'Notify about ready orders'"
    },
    {
      "parameters": {
        "content": "For now just pick the first one (without a CS ID)",
        "height": 224,
        "width": 224,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6224,
        944
      ],
      "typeVersion": 1,
      "id": "5634cef0-f339-4180-8d6b-29112e806584",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "data.created_at",
              "order": "descending"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        5648,
        1008
      ],
      "id": "c5448110-4e16-4c4d-a857-1117c5fce576",
      "name": "Sort by latest deal"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0ccfeef8-ac39-4a64-9260-86763540bcf2",
              "leftValue": "={{ $json.body.items[0].data.created_at.toDateTime().plus(1, 'hour') }}",
              "rightValue": "={{ $now }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3520,
        144
      ],
      "id": "0665be16-05df-4297-99e7-50a6f0a24b97",
      "name": "Created less than an hour ago?"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4478c12e-186a-47a6-9b1c-09e13077d9f8",
              "leftValue": "={{ $json.body.items[0].data.custom_fields[\"Created by\"] }}",
              "rightValue": "CS-Sync",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3728,
        48
      ],
      "id": "05b07f3d-d274-4671-81ab-14222fa7a8ee",
      "name": "If deal was created by this sync workflow"
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "=https://api.getbase.com/v2/deals/{{ $json.body.items[0].data.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "User-Agent",
              "value": "YourAppName/1.0"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3936,
        -48
      ],
      "id": "f6560087-27ca-43d0-a061-035b8a76fe94",
      "name": "Zendesk: Delete deal",
      "retryOnFail": false,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpBearerAuth": {
          "id": "LsYF5cN5nkb0vjbk",
          "name": "Zendesk Sell (PROD)"
        }
      }
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://api.getbase.com/v2/deals/{{ $json.body.items[0].data.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "User-Agent",
              "value": "YourAppName/1.0"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"data\": {\n    \"stage_id\": {{ $('Globals').item.json.stage_id_lost }}\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3728,
        240
      ],
      "id": "b7c93916-a1cf-469d-8f1a-76e3c326589d",
      "name": "Zendesk: Update deal - set stage to lost",
      "retryOnFail": false,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpBearerAuth": {
          "id": "LsYF5cN5nkb0vjbk",
          "name": "Zendesk Sell (PROD)"
        }
      }
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://api.getbase.com/v2/deals/{{ $json.body.items[0].data.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "User-Agent",
              "value": "YourAppName/1.0"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"data\": {\n    \"stage_id\": {{ $('Globals').item.json.stage_id_information }}\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3936,
        144
      ],
      "id": "65037c10-7b23-445e-af4a-45494c9e1a89",
      "name": "Zendesk: Update deal - set stage to information",
      "retryOnFail": false,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpBearerAuth": {
          "id": "LsYF5cN5nkb0vjbk",
          "name": "Zendesk Sell (PROD)"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "02add3d8-a204-49f2-8de8-7d730bde17a3",
              "leftValue": "={{ $json.data.custom_fields[\"Cyclesoftware ID\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            },
            {
              "id": "bc4ddc23-4de7-48e7-835c-63704a27cb3b",
              "leftValue": "={{ $json.data.stage_id }}",
              "rightValue": "={{ $('Globals').item.json.stage_id_won }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        5232,
        896
      ],
      "id": "71fa16ed-b793-41a3-8a91-2272e2d13ac1",
      "name": "Skip won deals or where a CS ID is set",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "vInxOMo9wGJ4wbLR",
          "mode": "list",
          "cachedResultUrl": "/workflow/vInxOMo9wGJ4wbLR",
          "cachedResultName": "Notify about pending orders"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        2896,
        592
      ],
      "id": "a1ffd923-8aa0-4b76-a833-9ec08baedfef",
      "name": "Call 'Notify about pending orders'"
    }
  ],
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "Call 'Notify about pending orders'",
            "type": "main",
            "index": 0
          },
          {
            "node": "Call 'Notify about ready orders'",
            "type": "main",
            "index": 0
          },
          {
            "node": "If order is cancelled",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cyclesoftware: Get recently updated orders": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zendesk: Get contacts": {
      "main": [
        [
          {
            "node": "If contact does not exist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If contact does not exist": {
      "main": [
        [
          {
            "node": "Contact not found in ZD",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Zendesk: Get deals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare fields": {
      "main": [
        [
          {
            "node": "Zendesk: Create deal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zendesk: Create deal": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zendesk: Get deals": {
      "main": [
        [
          {
            "node": "ZD Deal Ref",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Do nothing": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zendesk: Get deal by CS ID": {
      "main": [
        [
          {
            "node": "Deal found?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deal found?": {
      "main": [
        [
          {
            "node": "Update deal1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Zendesk: Get contacts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update deal1": {
      "main": [
        [
          {
            "node": "Prepare fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Skip won deals or where a CS ID is set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Prepare fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          },
          {
            "node": "Do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare fields1": {
      "main": [
        [
          {
            "node": "Zendesk: Update deal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zendesk: Update deal": {
      "main": [
        [
          {
            "node": "Store ZD ID's to skip them during CS update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Get last updated timestamp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Stage ID": {
      "main": [
        [
          {
            "node": "Zendesk: Get deal by CS ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No deal found": {
      "main": [
        [
          {
            "node": "Prepare fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Sort by latest deal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare fields2": {
      "main": [
        [
          {
            "node": "Zendesk: Update deal1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zendesk: Update deal1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get last updated timestamp": {
      "main": [
        [
          {
            "node": "next",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "next": {
      "main": [
        [
          {
            "node": "Cyclesoftware: Get recently updated orders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "merge": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Result",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "next",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Result": {
      "main": [
        [
          {
            "node": "Update last updated timestamp",
            "type": "main",
            "index": 0
          },
          {
            "node": "Only continue if data returned",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CS Order Ref": {
      "main": [
        [
          {
            "node": "Only keep orders with a bike",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ZD Deal Ref": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Store ZD ID's to skip them during CS update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Store ZD ID's to skip them during CS update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Keep only new entries": {
      "main": [
        [
          {
            "node": "CS Order Ref",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Only continue if data returned": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Keep only new entries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Only keep orders with a bike": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calc total value": {
      "main": [
        [
          {
            "node": "Set Stage ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If order is cancelled": {
      "main": [
        [
          {
            "node": "Zendesk: Get deal by CS ID1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Calc total value",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zendesk: Get deal by CS ID1": {
      "main": [
        [
          {
            "node": "Deal found?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deal found?1": {
      "main": [
        [
          {
            "node": "Created less than an hour ago?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort by latest deal": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Created less than an hour ago?": {
      "main": [
        [
          {
            "node": "If deal was created by this sync workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Zendesk: Update deal - set stage to lost",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If deal was created by this sync workflow": {
      "main": [
        [
          {
            "node": "Zendesk: Delete deal",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Zendesk: Update deal - set stage to information",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip won deals or where a CS ID is set": {
      "main": [
        [
          {
            "node": "No deal found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "ucevxHAU6iRAZOr1",
    "executionTimeout": 900
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {}
      }
    ]
  },
  "versionId": "b350ad3e-597f-47bb-84c6-7e7657d06679",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2025-07-18T18:06:55.321Z",
      "updatedAt": "2025-07-18T18:06:55.321Z",
      "id": "O8Gvscx6k1IxcC6a",
      "name": "sub"
    }
  ],
  "shared": [
    {
      "createdAt": "2025-09-17T11:48:38.596Z",
      "updatedAt": "2025-09-17T11:48:38.596Z",
      "role": "workflow:owner",
      "workflowId": "MOCbD1Vyim0GGKgU",
      "projectId": "rOX3uTf9lsIdiy81",
      "project": {
        "createdAt": "2025-07-17T20:25:11.997Z",
        "updatedAt": "2025-07-17T20:31:24.249Z",
        "id": "rOX3uTf9lsIdiy81",
        "name": "Odette Oostindiën <odette@qicq.nl>",
        "type": "personal",
        "icon": null,
        "description": null
      }
    }
  ]
}