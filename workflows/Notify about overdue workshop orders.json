{
  "createdAt": "2025-10-09T19:04:20.745Z",
  "updatedAt": "2025-10-24T13:43:28.929Z",
  "id": "qEbpV1W8rKjZjOIF",
  "name": "Notify about overdue workshop orders",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 9,
              "triggerAtMinute": 2
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -608,
        368
      ],
      "id": "ac857bab-5cdc-4d95-b03f-4d59065442b8",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "content": "## Set Globals\n**2 recipients!**",
        "height": 272,
        "width": 224
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -224,
        272
      ],
      "typeVersion": 1,
      "id": "2be5e843-22ac-44bc-9d6c-5a47c5b2ea27",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "url": "https://api.cyclesoftware.nl/api/v1/workshop/orders.json",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "status_ids",
              "value": "1,2,3,4,5,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26.27,28,29,30"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-encoding",
              "value": "gzip"
            },
            {
              "name": "Content-type",
              "value": "application/json; charset=utf-8"
            }
          ]
        },
        "options": {
          "pagination": {
            "pagination": {
              "paginationMode": "responseContainsNextURL",
              "nextURL": "={{ $response.body.pagination.next_url }}",
              "paginationCompleteWhen": "other",
              "completeExpression": "={{ $response.body.pagination.next_url == null }}",
              "requestInterval": 3000
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        64,
        368
      ],
      "id": "5a96a30d-cb22-42d6-bd34-580629adb2b0",
      "name": "Cyclesoftware: Get workshop orders",
      "retryOnFail": true,
      "alwaysOutputData": false,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpBasicAuth": {
          "id": "q6AhamIl37oB4xIX",
          "name": "Cyclesoftware (PROD)"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.cyclesoftware.nl/api/v1/common/enum.json",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-encoding",
              "value": "gzip"
            },
            {
              "name": "Content-type",
              "value": "application/json; charset=utf-8"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        64,
        592
      ],
      "id": "c264c287-c732-4e32-8c2e-5f0bb43f1513",
      "name": "Cyclesoftware: Get common values",
      "retryOnFail": false,
      "alwaysOutputData": true,
      "credentials": {
        "httpBasicAuth": {
          "id": "q6AhamIl37oB4xIX",
          "name": "Cyclesoftware (PROD)"
        }
      }
    },
    {
      "parameters": {
        "content": "## Set Status IDs\n\nExecute the node below and search within the result for the IDs within the key workshop_order_status\nCreate a csv list of those and exclude the IDs for statuses named \"wait for invoicing\", \"repair completed\", \"completed\", \"cancelled\".\nIt does not hurt to ad a few more continuing numbers at the end to be future proof.",
        "height": 784,
        "width": 224
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "190c53a7-fdd0-489a-ad69-63ec7d7118ce",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "Pagination included",
        "height": 224,
        "width": 192,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        16,
        320
      ],
      "typeVersion": 1,
      "id": "bdf3df76-3e2b-4b92-88e6-c64c50a10427",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data[0]",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        288,
        368
      ],
      "id": "6af7a983-fc8a-4921-87bf-260028e36fb6",
      "name": "Split Out"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "abf8f5a8-ac88-48e5-b06e-839219adc432",
              "name": "Werkplaatsbestelling",
              "value": "=<a href=\"https://s01.cyclesoftware.nl/app/cs/orders/detail/{{ $('Split Out').item.json.workshop_order_id }}\">{{ $('Split Out').item.json.workshop_order_id }}</a>",
              "type": "string"
            },
            {
              "id": "ca631f2d-c4fe-4496-be37-59bfd9c8d067",
              "name": "Klant",
              "value": "=<a href=\"https://s01.cyclesoftware.nl/app/cs/klanten/details/?klantnummer={{ $json.customer_id }}\">{{ $json.first_name }} {{ $json.name }}{{ $if($json.company_name.isNotEmpty(), \"(\" + $json.company_name + \")\", \"\") }}</a>",
              "type": "string"
            },
            {
              "id": "814a37ee-fed0-48cc-b36b-38c1412d5e16",
              "name": "Status",
              "value": "={{ $('Split Out').item.json.status_text }}",
              "type": "string"
            },
            {
              "id": "ca3ff1ae-6f09-4031-b64e-2045cc81b152",
              "name": "Te laat sinds",
              "value": "={{ (diff = $('Split Out').item.json.datetime_scheduled_start.toDateTime().diffTo($now, 'days').ceil()*-1) === 0 ? 'Vandaag' : diff === 1 ? 'Gisteren' : diff + ' dagen geleden' }}",
              "type": "string"
            },
            {
              "id": "a3a57eb1-cac3-4d01-8b5a-fd86d541fb00",
              "name": "Gepland voor",
              "value": "={{ $('Split Out').item.json.datetime_scheduled_start.toDateTime().format('dd-MM-yyyy HH:mm') }}",
              "type": "string"
            },
            {
              "id": "f9368d47-09a3-421e-a2de-040dd8b94bec",
              "name": "Aantal posities",
              "value": "={{ $('Split Out').item.json.order_items.length }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        960,
        368
      ],
      "id": "8454b78b-0c96-4fa0-9190-79b89e02b0fb",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "url": "=https://api.cyclesoftware.nl/api/v1/customers/{{ $('Split Out').item.json.customer_id }}.json",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {}
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-encoding",
              "value": "gzip"
            },
            {
              "name": "Content-type",
              "value": "application/json; charset=utf-8"
            }
          ]
        },
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        736,
        368
      ],
      "id": "ed21707a-7c6e-4801-9904-6d0fd9b14983",
      "name": "Cyclesoftware: Get customer",
      "retryOnFail": true,
      "alwaysOutputData": false,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpBasicAuth": {
          "id": "q6AhamIl37oB4xIX",
          "name": "Cyclesoftware (PROD)"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "Cyclesoftware meldingen <system@qicq.nl>",
        "toEmail": "={{ $('Globals').first().json.recipient_email }}",
        "subject": "Achterstallige werkplaatsafspraken",
        "html": "=<!DOCTYPE html>\n\n<html>\n<head>\n  <meta charset=\"UTF-8\" />\n</head>\n<body>\n    <h1>De volgende werkplaatsafspraken zijn te laat</h1>\n    <br>\n    <h2>{{ $json.data[0].title }}</h2>\n    {{ $json.data[0].table }}\n    <br>\n    <h2>{{ $json.data[1].title }}</h2>\n    {{ $json.data[1].table }}\n    <br>\n    <h2>{{ $json.data[2].title }}</h2>\n    {{ $ifEmpty($json.data[2].table, \"-\") }}\n</body>\n</html>",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        2288,
        368
      ],
      "id": "d1b59a3c-fa8a-45d6-9f33-65a4b780fe1c",
      "name": "Send email to admin",
      "webhookId": "599b7043-50a7-494d-a76a-5094bac4ee2d",
      "credentials": {
        "smtp": {
          "id": "KitgAZtXOjpJzXuW",
          "name": "SMTP Brevo"
        }
      }
    },
    {
      "parameters": {
        "operation": "convertToHtmlTable",
        "options": {
          "cellAttributes": "width=\"150\""
        }
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        1392,
        160
      ],
      "id": "c331ee2e-c305-4a10-88cf-bd56554656fb",
      "name": "Generate table"
    },
    {
      "parameters": {
        "content": "split into new/resolved/unresolved overdue orders",
        "height": 672,
        "width": 880,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1120,
        96
      ],
      "typeVersion": 1,
      "id": "d259866e-5d8a-47d3-8cd9-993213e07d9d",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b62994af-4e93-4e09-a2ce-2565d6ae6290",
              "name": "recipient_email",
              "value": "lisette@qicq.nl, tommy@qicq.nl",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -160,
        368
      ],
      "id": "d01f5841-556d-42bb-8a74-1e968ce684a3",
      "name": "Globals"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "notification_overdue_workshop_orders",
        "value": "={{ $json.data.reduce((acc, item) => { acc[item.workshop_order_id] = item.datetime_scheduled_start; return acc; }, {}) }}",
        "keyType": "hash"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        960,
        160
      ],
      "id": "b1d0ee72-fe38-4654-bc90-a592bd7b943f",
      "name": "Store dates for next run",
      "credentials": {
        "redis": {
          "id": "KM9u3JmYZGaWL2Xe",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "notification_overdue_workshop_orders"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        736,
        160
      ],
      "id": "2790dc83-a5cb-4433-b421-b7e4c25fc04b",
      "name": "Clear previously stored dates",
      "executeOnce": false,
      "credentials": {
        "redis": {
          "id": "KM9u3JmYZGaWL2Xe",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        512,
        160
      ],
      "id": "9c1107f5-bac6-4187-9f2d-273ed18ca3c8",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "notification_overdue_workshop_orders",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -384,
        368
      ],
      "id": "d3d717f0-9556-4b6a-b1b7-e468144ccf8d",
      "name": "Get previously stored dates",
      "credentials": {
        "redis": {
          "id": "KM9u3JmYZGaWL2Xe",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fae9ebf3-0121-4c81-a20c-5abf5085b6f2",
              "leftValue": "={{ $json.datetime_scheduled_start.toDateTime() }}",
              "rightValue": "={{ $now }}",
              "operator": {
                "type": "dateTime",
                "operation": "before"
              }
            },
            {
              "id": "b7b4c3ce-634a-4bf2-984a-2719e4bd0592",
              "leftValue": "={{ $('Get previously stored dates').item.json.propertyName[$json.workshop_order_id] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        512,
        368
      ],
      "id": "8fa8207e-99f8-4156-87be-f9350f054011",
      "name": "Only keep overdue and solved items"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0491bc37-3934-4d6e-8f3f-cbfc3b0fb15a",
                    "leftValue": "={{ $('Get previously stored dates').item.json.propertyName[$('Split Out').item.json.workshop_order_id] }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notExists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "new"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1978a4a0-aeb8-47bc-b65d-4a35a80bc19d",
                    "leftValue": "={{ $('Split Out').item.json.datetime_scheduled_start.toDateTime() }}",
                    "rightValue": "={{ $now }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "afterOrEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "resolved"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ false }}",
                    "rightValue": "={{ $('Get previously stored dates').item.json.propertyName[$('Split Out').item.json.workshop_order_id] }}",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "id": "2c4b456b-86cd-430c-9e39-19b027701571"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "unresolved"
            }
          ]
        },
        "options": {
          "fallbackOutput": 2
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1168,
        352
      ],
      "id": "1584e5a0-c4a3-42a1-95a6-43547b256061",
      "name": "Switch"
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1840,
        352
      ],
      "id": "83162c4f-9d60-4af5-9bf3-62b71279f059",
      "name": "Merge"
    },
    {
      "parameters": {
        "operation": "convertToHtmlTable",
        "options": {
          "cellAttributes": "width=\"150\""
        }
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        1392,
        368
      ],
      "id": "f0685c6b-86de-459d-bcf2-eb6d6c31a866",
      "name": "Generate table1"
    },
    {
      "parameters": {
        "operation": "convertToHtmlTable",
        "options": {
          "cellAttributes": "width=\"150\""
        }
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        1392,
        576
      ],
      "id": "f756d317-418a-4f81-b10f-5c11c354d45e",
      "name": "Generate table2"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2064,
        368
      ],
      "id": "f6209444-dff5-41ed-8777-a3325c6ff32d",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "518b7dfc-013e-4a40-8eac-59a5c7a4a7be",
              "name": "title",
              "value": "Nieuw",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1616,
        160
      ],
      "id": "88f29217-71c3-4f15-8b8d-4478787e2ca5",
      "name": "Set title"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "518b7dfc-013e-4a40-8eac-59a5c7a4a7be",
              "name": "title",
              "value": "Opgelost",
              "type": "string"
            },
            {
              "id": "d377c3db-d1e2-4ac7-bf86-b5e13dcedfcb",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1616,
        368
      ],
      "id": "d384c12a-558d-424f-8161-f839d21da703",
      "name": "Set title1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "518b7dfc-013e-4a40-8eac-59a5c7a4a7be",
              "name": "title",
              "value": "Onopgelost",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1616,
        576
      ],
      "id": "8cf712f0-1504-41de-88c9-c961f65c8338",
      "name": "Set title2"
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get previously stored dates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cyclesoftware: Get workshop orders": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Only keep overdue and solved items",
            "type": "main",
            "index": 0
          },
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cyclesoftware: Get customer": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate table": {
      "main": [
        [
          {
            "node": "Set title",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Cyclesoftware: Get workshop orders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clear previously stored dates": {
      "main": [
        [
          {
            "node": "Store dates for next run",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Clear previously stored dates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get previously stored dates": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Only keep overdue and solved items": {
      "main": [
        [
          {
            "node": "Cyclesoftware: Get customer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Generate table",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate table1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate table2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate table1": {
      "main": [
        [
          {
            "node": "Set title1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate table2": {
      "main": [
        [
          {
            "node": "Set title2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Send email to admin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set title": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set title1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Set title2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "errorWorkflow": "ucevxHAU6iRAZOr1",
    "callerPolicy": "workflowsFromSameOwner",
    "availableInMCP": false,
    "timeSavedPerExecution": 10
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "6f01aa1a-4c9a-4554-bc32-d0666d725aa0",
  "triggerCount": 1,
  "tags": [
    {
      "createdAt": "2025-07-18T18:13:03.391Z",
      "updatedAt": "2025-07-18T18:13:03.391Z",
      "id": "9Unu8zOsMe5ug14X",
      "name": "main"
    }
  ],
  "shared": [
    {
      "createdAt": "2025-10-09T19:04:20.745Z",
      "updatedAt": "2025-10-09T19:04:20.745Z",
      "role": "workflow:owner",
      "workflowId": "qEbpV1W8rKjZjOIF",
      "projectId": "rOX3uTf9lsIdiy81",
      "project": {
        "createdAt": "2025-07-17T20:25:11.997Z",
        "updatedAt": "2025-07-17T20:31:24.249Z",
        "id": "rOX3uTf9lsIdiy81",
        "name": "Odette Oostindiën <odette@qicq.nl>",
        "type": "personal",
        "icon": null,
        "description": null
      }
    }
  ]
}